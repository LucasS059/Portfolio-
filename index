<!DOCTYPE html>
<html lang="pt-br">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/style.css">
    <title>Lucas Silva</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <link rel="icon" href="/assets/Images/logo-nova.jpeg" type="image/png">
</head>

<body>
    <header>
        <nav class="navbar navbar-expand-lg bg fixed-top custom-menu">
            <div class="container-fluid justify-content-center">
                <a class="navbar-brand" href="index.html">
                    <img src="/assets/Images/logo-nova.jpeg" width="200">
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                    aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link" href="#habilidades">Habilidades</a>
                        </li>

                        <li class="nav-item">
                            <a class="nav-link" href="#certificados">Certificados</a>
                        </li>

                        <li class="nav-item">
                            <a class="nav-link" href="#area-contatos">Conecte-se Comigo</a>
                        </li>

                        <li class="nav-item">
                            <a class="nav-link" href="/html/projetos.html">Projetos</a>
                        </li>

                        <li class="nav-item">
                            <a class="nav-link" href="/html/add_projetos.html" id="add-projects-link">Adicionar
                                Projetos</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <main>
        <section class="sobre-mim">
            <div class="descricao-pessoal">
                <div class="foto-container">
                    <img src="/assets/Images/perfil.jpg" alt="Minha Foto" class="foto">
                </div>
                <h2>Lucas Silva Barboza</h2>
                <div class="barra-azul-2"></div>
                <p>Sou muito interessado na área da tecnologia e no impacto que o desenvolvimento de software pode
                    proporcionar. Programar
                    é uma forma de explorar novas possibilidades e criar soluções inovadoras. Estou sempre em busca de
                    novos desafios para
                    aprimorar minhas habilidades e solucionar problemas de formas criativas.</p>
            </div>
        </section>

        <div class="barra-azul"></div>

        <section class="habilidades" id="habilidades">
            <h1 class="mb-4">Minhas Habilidades</h1>
            <div class="container">
                <div class="cards-container row">
                    <div class="col-md col-lg-5 mb-4">
                        <div class="card-habilidades">
                            <h3>Desenvolvimento Web</h3>
                            <p>Criação de websites modernos e responsivos utilizando HTML, CSS, JavaScript, React e
                                Bootstrap.
                            </p>
                        </div>
                    </div>
                    <div class="col-md col-lg-5 mb-4">
                        <div class="card-habilidades">
                            <h3>Desenvolvimento de Aplicativos</h3>
                            <p>Desenvolvimento de aplicativos multiplataforma com Flutter e React Native utilizando Expo
                                para
                                Android e iOS.</p>
                        </div>
                    </div>
                    <div class="col-md col-lg-5 mb-4">
                        <div class="card-habilidades">
                            <h3>Back-End</h3>
                            <p>Experiência com desenvolvimento back-end utilizando Python e Node.js para criação de APIs
                                e
                                sistemas robustos.</p>
                        </div>
                    </div>
                    <div class="col-md col-lg-5 mb-4">
                        <div class="card-habilidades">
                            <h3>Bancos de Dados</h3>
                            <p>Gerenciamento e integração de bancos de dados MySQL e MongoDB para armazenamento e
                                recuperação de
                                dados eficientes.</p>
                        </div>
                    </div>
                    <div class="col-md col-lg-5 mb-4">
                        <div class="card-habilidades">
                            <h3>Versionamento de Código</h3>
                            <p>Uso de Git e GitHub para controle de versão, colaboração em equipe e entrega contínua de
                                projetos.</p>
                        </div>
                    </div>
                    <div class="col-md col-lg-5 mb-4">
                        <div class="card-habilidades">
                            <h3>Design de Interfaces</h3>
                            <p>Conhecimento em UX/UI Design para criar interfaces intuitivas e acessíveis, focadas na
                                melhor
                                experiência do usuário.</p>
                        </div>
                    </div>
                    <div class="col-md col-lg-5 mb-4">
                        <div class="card-habilidades">
                            <h3>Trabalho em Equipe</h3>
                            <p>Habilidade em comunicação e colaboração para desenvolver projetos em equipe, garantindo
                                eficiência e qualidade no desenvolvimento de software.</p>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <section class="certificados" id="certificados">
            <h1 class="mb-4">Certificados</h1>
            <div class="container">
                <div id="carouselCertificados" class="carousel slide" data-bs-ride="carousel">
                    <div class="carousel-inner">
                        <!-- Slides serão criados dinamicamente via JavaScript -->
                    </div>
                    <!-- Controles do Carrossel -->
                    <button class="carousel-control-prev" type="button" data-bs-target="#carouselCertificados"
                        data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Anterior</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#carouselCertificados"
                        data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Próximo</span>
                    </button>
                </div>
            </div>
        </section>

        <section class="contatos" id="area-contatos">
            <div class="container">
                <h2 class="text-center mb-4">Conecte-se Comigo</h2>
                <div class="contato-container row">
                    <!-- Informações de contato -->
                    <div class="informacoes col-12 col-md-6 mb-4">
                        <p>Estou sempre disponível para novas conexões, trocas de ideias e colaborações. Sinta-se à
                            vontade para me seguir nas redes sociais.</p>
                        <div class="social-icons mb-4">
                            <a href="https://github.com/LucasS059" target="_blank" class="social-icon">
                                <img src="/assets/icons/github.svg" alt="GitHub">
                            </a>
                            <a href="https://www.linkedin.com/in/lucas-silva-barboza-a2568b285/" target="_blank"
                                class="social-icon">
                                <img src="/assets/icons/linkedin.svg" alt="LinkedIn">
                            </a>
                            <a href="https://www.instagram.com/lucas_s059/" target="_blank" class="social-icon">
                                <img src="/assets/icons/instagram.svg" alt="Instagram">
                            </a>
                        </div>
                        <div class="email-contatos">
                            <h3>Entre em contato por e-mail:</h3>
                            <ul>
                                <li>
                                    <a href="mailto:lucasbarboza299@gmail.com">
                                        <img src="/assets/icons/gmail.svg" alt="E-mail"> lucasbarboza299@gmail.com
                                    </a>
                                </li>
                                <li>
                                    <a href="mailto:dev.lucas.silva59@gmail.com">
                                        <img src="/assets/icons/gmail.svg" alt="E-mail"> dev.lucas.silva59@gmail.com
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <!-- Formulário de contato
                    <div class="formulario col-12 col-md-6">
                        <form class="contact-form" onsubmit="return validateForm()">
                            <h3>Ou envie uma mensagem:</h3>
                            <input type="text" placeholder="Seu nome" required>
                            <input type="email" placeholder="Seu e-mail" required>
                            <textarea placeholder="Sua mensagem" rows="5" required></textarea>
                            <button type="submit">Enviar</button>
                        </form>
                    </div> -->
                </div>
            </div>
        </section>
    </main>

    <footer class="footer">
        <div class="container">
            <p>&copy; 2025 Lucas Silva Barboza | Todos os direitos reservados</p>
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>
    <script>
        // Exibe ou oculta o link de adicionar projetos conforme ambiente
        document.addEventListener("DOMContentLoaded", function () {
            const addProjectsLink = document.getElementById("add-projects-link");
            const isProduction = window.location.hostname !== "localhost";
            addProjectsLink.style.display = isProduction ? "none" : "block";
        });

        // Ao carregar a página, busca os certificados do MongoDB e popula o carrossel
        document.addEventListener("DOMContentLoaded", function () {
            fetch('https://portfolio-yg0y.onrender.com/Portfolio/certificates')
                .then(response => response.json())
                .then(certificates => {
                    const carouselInner = document.querySelector('.carousel-inner');
                    carouselInner.innerHTML = ''; // Limpa conteúdo anterior, se houver

                    if (certificates.length === 0) {
                        carouselInner.innerHTML = '<div class="carousel-item active"><p class="text-center">Nenhum certificado encontrado.</p></div>';
                        return;
                    }

                    certificates.forEach((certificate, index) => {
                        const activeClass = index === 0 ? ' active' : '';
                        const slide = document.createElement('div');
                        slide.className = 'carousel-item' + activeClass;
                        slide.innerHTML = `
                  <div class="card-certificados mx-auto">
                    <h3>${certificate.title}</h3>
                    <p>${certificate.description}</p>
                    <div class="btn-container">
                      <a href="${certificate.certificateUrl}" target="_blank" class="btn btn-primary">Visualizar Certificado</a>
                      <a href="${certificate.authenticityUrl}" target="_blank" class="btn btn-secondary">Verificar Autenticidade</a>
                    </div>
                  </div>
                `;
                        carouselInner.appendChild(slide);
                    });
                })
                .catch(error => {
                    console.error('Erro ao carregar certificados:', error);
                });
        });
    </script>
</body>

</html>



<!DOCTYPE html>
<html lang="pt-br">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/css/projetos.css">
    <link rel="icon" href="/assets/Images/logo-nova.jpeg" type="image/png">
    <title>Projetos</title>
</head>

<body>
    <header>
        <nav class="navbar navbar-expand-lg bg fixed-top custom-menu">
            <div class="container-fluid justify-content-center">
                <a class="navbar-brand" href="index.html">
                    <img src="/assets/Images/logo-nova.jpeg" width="150">
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                    aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link" href="/index.html"><span style="padding-right: 10px; color: black"><i
                                        class="bi bi-house-fill"></i></span>Home</a>
                        </li>

                        <li class="nav-item">
                            <a class="nav-link" href="/public/html/index.html#habilidades">Habilidades</a>
                        </li>

                        <li class="nav-item">
                            <a class="nav-link" href="/public/html/index.html#certificados">Certificados</a>
                        </li>

                        <li class="nav-item">
                            <a class="nav-link" href="/public/html/index.html#area-contatos">Conecte-se Comigo</a>
                        </li>

                        <li class="nav-item">
                            <a class="nav-link" href="/html/projetos.html">Projetos</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <main class="container my-5">
        <h1 class="text-center mb-4">Meus Projetos</h1>
        <div id="mainCarousel" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-inner"></div>
            <button class="carousel-control-prev" type="button" data-bs-target="#mainCarousel" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Anterior</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#mainCarousel" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Próximo</span>
            </button>
        </div>

        <div id="project-details" class="mt-5" style="display: none;">
            <div class="d-flex justify-content-between align-items-center">
                <h2 id="project-title"></h2>
                <span class="close-btn" onclick="hideDetails()">&times;</span>
            </div>
            <p id="project-description"></p>

            <div id="project-images" class="carousel slide" data-bs-ride="carousel">
                <div class="carousel-inner" id="project-photos"></div>
                <button class="carousel-control-prev" type="button" data-bs-target="#project-images"
                    data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Anterior</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#project-images"
                    data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Próximo</span>
                </button>
            </div>
        </div>
    </main>

    <footer class="footer">
        <div class="container">
            <p>&copy; 2025 Lucas Silva Barboza | Todos os direitos reservados</p>
        </div>
    </footer>

    <script>
        // async function fetchProjects() {
        //     try {
        //         console.log("Tentando buscar projetos...");
        //         const response = await fetch("http://localhost:3002/Portfolio/projects");
        //         if (!response.ok) {
        //             throw new Error(`Erro na API: ${response.status} ${response.statusText}`);
        //         }
        //         const projects = await response.json();
        //         console.log("Projetos recebidos:", projects);
        //         window.projects = projects;
        //         renderCarousel(projects);
        //     } catch (error) {
        //         console.error("Erro ao buscar projetos:", error.message);
        //     }
        // }

        async function fetchProjects() {
            try {
                console.log("Tentando buscar projetos...");
                const response = await fetch("https://portfolio-yg0y.onrender.com/Portfolio/projects");
                if (!response.ok) {
                    throw new Error(`Erro na API: ${response.status} ${response.statusText}`);
                }
                const projects = await response.json();
                console.log("Projetos recebidos:", projects);
                window.projects = projects;
                renderCarousel(projects);
            } catch (error) {
                console.error("Erro ao buscar projetos:", error.message);
            }
        }

        function renderCarousel(projects) {
            const carouselInner = document.querySelector("#mainCarousel .carousel-inner");

            carouselInner.innerHTML = projects.map((project, index) => `
        <div class="carousel-item ${index === 0 ? 'active' : ''}">
            <img src="${Array.isArray(project.photos) ? project.photos[0] : project.photos}" class="d-block w-100 rounded-3" alt="${project.title}" onclick="showDetails(${index})">
        </div>
    `).join("");
        }


        function formatDescription(description) {
            return description.split('\n').map(line => {
                const urlPattern = /(https?:\/\/[^\s]+)/g;
                line = line.replace(urlPattern, '<a href="$1" target="_blank">$1</a>');
                return `<p>${line}</p>`;
            }).join('');
        }

        function showDetails(index) {
            const project = window.projects[index];
            document.getElementById("project-title").textContent = project.title;

            document.getElementById("project-description").innerHTML = formatDescription(project.description);

            const photosContainer = document.getElementById("project-photos");

            // Verificar a base64 de cada foto no projeto
            project.photos.forEach((photo, i) => {
                console.log(`Imagem ${i}:`, photo); // Verifica a base64 de cada imagem do projeto
            });

            photosContainer.innerHTML = project.photos.map((photo, i) => `
        <div class="carousel-item ${i === 0 ? 'active' : ''}">
            <img src="${photo}" class="d-block w-100" alt="${project.title}">
        </div>
    `).join("");

            document.getElementById("project-details").style.display = "block";
        }


        function hideDetails() {
            document.getElementById("project-details").style.display = "none";
        }

        document.addEventListener("DOMContentLoaded", fetchProjects);
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>
</body>

</html>


require('dotenv').config();
const path = require('path');
const express = require("express");
const mongoose = require("mongoose");
const cors = require("cors");
const sharp = require('sharp');

const app = express();

// Middleware para servir arquivos estáticos
app.use(express.static('public'));

// Middleware para parsing de JSON e formulários
app.use(express.json({ limit: "50mb" }));
app.use(express.urlencoded({ limit: "50mb", extended: true }));

// Middleware para CORS
app.use(cors({
origin: ['http://127.0.0.1:5500', 'http://localhost:5500'],
methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
}));

// Middleware para logs
app.use((req, res, next) => {
console.log(`Requisição recebida: ${req.method} ${req.url}`);
next();
});

// Conexão com o MongoDB
const uri = process.env.MONGODB_URI;
mongoose.connect(uri, { useNewUrlParser: true, useUnifiedTopology: true })
.then(() => console.log("Conectado ao MongoDB"))
.catch(err => console.error("Erro ao conectar ao MongoDB:", err));

/* Modelo do Projeto */
const projectSchema = new mongoose.Schema({
title: String,
description: String,
photos: [String],
createdAt: { type: Date, default: Date.now }
});
const Project = mongoose.model("Project", projectSchema);

/* Rota para obter os projetos */
app.get("/Portfolio/projects", async (req, res) => {
try {
console.log("Recebendo requisição para obter projetos...");
const projects = await Project.find();
console.log("Projetos encontrados no banco:", projects);
res.json(projects);
} catch (err) {
console.error("Erro ao buscar projetos:", err);
res.status(500).json({ error: "Erro ao buscar projetos" });
}
});

/* Modelo para Certificados */
const certificateSchema = new mongoose.Schema({
title: { type: String, required: true },
description: String,
certificateUrl: String,
authenticityUrl: String
});
const Certificate = mongoose.model("Certificate", certificateSchema);

/* Rota para obter os certificados */
app.get("/Portfolio/certificates", async (req, res) => {
try {
console.log("Recebendo requisição para obter certificados...");
const certificates = await Certificate.find();
console.log("Certificados encontrados no banco:", certificates);
res.json(certificates);
} catch (err) {
console.error("Erro ao buscar certificados:", err);
res.status(500).json({ error: "Erro ao buscar certificados" });
}
});

/* Rota para adicionar um novo certificado */
app.post("/Portfolio/certificates", async (req, res) => {
try {
const { title, description, certificateUrl, authenticityUrl } = req.body;
if (!title || !certificateUrl || !authenticityUrl) {
return res.status(400).json({ error: "Título, URL do certificado e URL de autenticidade são obrigatórios." });
}

const newCertificate = new Certificate({
title,
description,
certificateUrl,
authenticityUrl
});

await newCertificate.save();
console.log("Certificado adicionado:", newCertificate);
res.status(201).json(newCertificate);
} catch (err) {
console.error("Erro ao adicionar certificado:", err);
res.status(500).json({ error: "Erro ao adicionar certificado" });
}
});

/* Função para redimensionar e comprimir imagens */
const resizeAndCompressImage = async (buffer) => {
try {
const resizedBuffer = await sharp(buffer)
.resize(800)
.jpeg({ quality: 70 })
.toBuffer();

return resizedBuffer;
} catch (err) {
console.error("Erro ao redimensionar e comprimir a imagem:", err);
throw err;
}
};

/* Rota para adicionar um novo projeto com imagens em base64 */
app.post("/Portfolio/projects", async (req, res) => {
try {
const { title, description, photos } = req.body;

if (!Array.isArray(photos) || photos.length === 0) {
return res.status(400).json({ error: "Deve enviar pelo menos uma foto." });
}

const processedPhotos = [];
for (let photo of photos) {
const buffer = Buffer.from(photo.split(",")[1], 'base64');
const processedBuffer = await resizeAndCompressImage(buffer);
const processedBase64 = `data:image/jpeg;base64,${processedBuffer.toString('base64')}`;
processedPhotos.push(processedBase64);
}

const newProject = new Project({
title,
description,
photos: processedPhotos,
createdAt: new Date()
});

await newProject.save();
console.log("Projeto adicionado:", newProject);
res.status(201).json(newProject);
} catch (err) {
console.error("Erro ao adicionar projeto:", err);
res.status(500).json({ error: "Erro ao adicionar projeto" });
}
});

/* Rota para servir o index.html como fallback */
app.get('*', (req, res) => {
res.sendFile(path.resolve(__dirname, 'public/html/index.html'));
});

// Configuração do servidor
const PORT = process.env.PORT || 3002;

app.listen(PORT, () => {
console.log(`Servidor rodando na porta ${PORT}`);
});